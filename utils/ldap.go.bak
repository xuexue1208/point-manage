package utils

import (
	"point-manage/config"
	"fmt"
	"github.com/go-ldap/ldap/v3"
)

func newLdapConn() (*ldap.Conn, error) {
	l, err := ldap.Dial("tcp", config.Instance.LdapInfo.Host)
	if err != nil {
		return nil, err
	}

	err = l.Bind(config.Instance.LdapInfo.BindDN, config.Instance.LdapInfo.BindPassword)
	if err != nil {
		l.Close()
		return nil, err
	}
	return l, nil
}
func Authenticate(username, password string) (bool, error) {
	conn, err := newLdapConn()
	if err != nil {
		return false, err
	}
	defer conn.Close()

	searchRequest := ldap.NewSearchRequest(
		config.Instance.LdapInfo.UserSearchBase,
		ldap.ScopeWholeSubtree,
		ldap.NeverDerefAliases,
		0,
		0,
		false,
		fmt.Sprintf("(uid=%s)", username),
		[]string{"dn"},
		nil,
	)

	sr, err := conn.Search(searchRequest)
	if err != nil {
		return false, err
	}

	if len(sr.Entries) != 1 {
		return false, nil
	}

	userDN := sr.Entries[0].DN

	err = conn.Bind(userDN, password)
	if err != nil {
		return false, nil
	}

	return true, nil
}
